     1                                  ; hello-os
     2                                  ; TAB=4
     3                                  
     4                                  CYLS EQU	10		;声明常数,EQU 相当与C中的#define
     5                                  
     6                                    ORG 0x7c00  ;指明程序的装载地址
     7                                  
     8                                  ; 以下的记述用于标准FAT12格式的软盘
     9                                  
    10 00000000 EB4E                      JMP entry
    11 00000002 90                        db  0x90
    12 00000003 48415249424F5445          db  "HARIBOTE"
    13 0000000B 0002                      dw  512
    14 0000000D 01                        db  1
    15 0000000E 0100                      dw  1
    16 00000010 02                        db  2
    17 00000011 E000                      dw  224
    18 00000013 400B                      dw  2880
    19 00000015 F0                        db  0xf0
    20 00000016 0900                      dw  9
    21 00000018 1200                      dw  18 
    22 0000001A 0200                      dw  2
    23 0000001C 00000000                  dd  0
    24 00000020 400B0000                  dd  2880
    25 00000024 000029                    db  0,0,0x29
    26 00000027 FFFFFFFF                  dd  0xffffffff
    27 0000002B 48415249424F54454F-       db  "HARIBOTEOS "
    27 00000034 5320               
    28 00000036 4641543332202020          db  "FAT32   "
    29 0000003E <res 00000012>            resb  18
    29          ******************       warning: uninitialized space declared in .text section: zeroing
    30                                  
    31                                  ;程序核心
    32                                  entry:      ;0x7c50
    33 00000050 B80000                    mov AX,0  ; 初始化寄存器
    34 00000053 8ED0                      mov SS,AX
    35 00000055 8ED8                      mov DS,AX
    36 00000057 8EC0                    	mov ES,AX
    37                                  
    38 00000059 BC007C                    mov SP,0x7c00
    39                                  
    40                                  ; 读盘时的参数
    41 0000005C B82008                  	mov	AX,0x0820
    42 0000005F 8EC0                    	mov	ES,AX
    43 00000061 B500                    	mov	CH,0				;	柱面 0
    44 00000063 B600                    	mov	DH,0				;	磁头 0
    45 00000065 B102                    	mov	CL,2				;	扇区 2
    46                                  
    47                                  readloop:
    48                                  ;试错
    49 00000067 BE0000                  	mov SI,0				;	记录失败次数的寄存器
    50                                  
    51                                  retry:
    52                                  ; 读盘指令
    53 0000006A B402                    	mov	AH,0x02			; 读盘指令
    54 0000006C B001                    	mov	AL,1				;	1个扇区
    55 0000006E BB0000                  	mov	BX,0
    56 00000071 B200                    	mov	DL,0x00			;	A驱动器
    57 00000073 CD13                    	INT	0x13				; 调用磁盘BIOS
    58 00000075 7310                    	JNC	next				; Jump if not carry,进位符为0,即没有出错,跳转
    59 00000077 83C601                  	ADD	SI,1
    60 0000007A 83FE05                  	CMP SI,5
    61 0000007D 7332                    	JAE	error				; JAE : Jump if above or equal 
    62                                  
    63                                  ; 复位磁盘状态
    64 0000007F B400                    	mov AH,0x00
    65 00000081 B200                    	mov	DL,0x00			; A 驱动器
    66 00000083 CD13                    	INT	0x13
    67 00000085 EBE3                    	JMP retry
    68                                  
    69                                  next:
    70 00000087 8CC0                    	mov	AX,ES				;	把内存地址后移0x20,读取下一个扇区，需要ES+0x20 ,CL +1
    71 00000089 83C020                  	add AX,0x0020
    72 0000008C 8EC0                    	mov	ES,AX				; 没有Add ES,0x20指令，需要借助AX实现
    73 0000008E 80C101                  	add	CL,1				; 向CL中+1
    74 00000091 80F912                  	CMP	CL,18				; CL 扇区
    75 00000094 76D1                    	JBE	readloop		; CL<=18 跳转至readloop
    76 00000096 B101                    	mov	CL,1
    77 00000098 80C601                  	add DH,1
    78 0000009B 80FE02                  	cmp	DH,2				;读取磁头2
    79 0000009E 72C7                    	JB	readloop		; 如果<2 ，则跳转至readloop
    80 000000A0 B600                    	mov	DH,0				; 读取新的柱面了
    81 000000A2 80C501                  	add	CH,1				; CH 柱面
    82 000000A5 80FD0A                  	cmp	CH,CYLS
    83 000000A8 72BD                    	JB	readloop		; 如果CH < CYLS，则跳转到readloop
    84                                  
    85 000000AA 882EF00F                	mov [0x0ff0],CH	; 将CYLS的值写入到0x0ff0这个地址,4080
    86                                  
    87                                  ;将程序跳到系统文件的开始出，具体的查看笔记文件
    88 000000AE E9(00C4)                	JMP	0xc400
    89                                  
    90                                  
    91                                  
    92                                  error:
    93 000000B1 BE[C900]                  mov SI,msg
    94                                  
    95                                  putloop:
    96 000000B4 8A04                      mov AL,[SI]
    97 000000B6 83C601                    add SI,1
    98 000000B9 3C00                      cmp AL,0
    99                                  
   100 000000BB 7409                      je  fin
   101 000000BD B40E                      mov AH,0x0e ;显示一个文字
   102 000000BF BB0F00                    mov BX,15   ;指定字符颜色
   103 000000C2 CD10                      INT 0x10    ;调用显卡BIOS
   104 000000C4 EBEE                      jmp putloop
   105                                  
   106                                  fin:
   107 000000C6 F4                        HLT         ;让CPU停止，等待指令
   108 000000C7 EBFD                      jmp fin
   109                                  
   110                                  msg:              ;0x7c74
   111 000000C9 0A0A                      DB  0x0a, 0x0a  ;换行两次
   112 000000CB 6C6F6164206572726F-       db  "load error"
   112 000000D4 72                 
   113 000000D5 0A                        db  0x0a        ;换行
   114 000000D6 00                        db  0
   115                                  
   116 000000D7 00<rept>                  times 510-($-$$) db 0
   117 000001FE 55AA                      db  0x55,0xaa
