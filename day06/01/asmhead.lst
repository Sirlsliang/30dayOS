     1                                  ;haribote-os
     2                                  ;TAB = 4
     3                                  
     4                                  BOTPAK	EQU	0x00280000
     5                                  DSKCAC	EQU	0x00100000
     6                                  DSKCAC0	EQU	0x00008000
     7                                  ; 有关BOOT_INFO
     8                                  CYLS	EQU	0x0ff0		;	设定启动区
     9                                  LEDS	EQU	0x0ff1
    10                                  VMODE	EQU	0x0ff2		;	关于颜色数目的信息，颜色的位数
    11                                  SCRNX	EQU	0x0ff4		;	分辨率的X
    12                                  SCRNY	EQU	0x0ff6		; 分辨率的Y
    13                                  VRAM	EQU	0x0ff8		;	图像缓冲区的开始地址
    14                                  
    15                                  	ORG 0xc400				; 程序装载到内存的位置
    16                                  	
    17 00000000 B013                    	MOV	AL,0x13			;VGA 显卡，320x200x8 位彩色
    18 00000002 B400                    	MOV	AH,0x00
    19 00000004 CD10                    	INT 0x10
    20 00000006 C606F20F08              	MOV	BYTE [VMODE],	8	; 记录画面模式
    21 0000000B C706F40F4001            	MOV	WORD [SCRNX], 320;
    22 00000011 C706F60FC800            	MOV	WORD [SCRNY], 200;
    23 00000017 66C706F80F00000A00      	MOV	DWORD [VRAM], 0x000a0000
    24                                  
    25                                  ; 用BIOS取得键盘上各种欧冠你LED指示灯的状态
    26 00000020 B402                    	MOV	AH, 0x02
    27 00000022 CD16                    	INT	0x16						; KeyBoard BIOS
    28 00000024 A2F10F                  	MOV [LEDS], AL
    29                                  ;PCI 关闭一切中断
    30                                  ;根据AT兼容机的规格，如果要初始化PIC必须在CLI之前进行
    31                                  ;否则有时会挂起，随后进行PIC的初始化
    32                                  
    33 00000027 B0FF                    	MOV	AL,	0xff
    34 00000029 E621                    	OUT	0x21,	AL
    35 0000002B 90                      	NOP									;如果连续执行OUT指令，有些机种会无法正常运行
    36 0000002C E6A1                    	OUT	0xa1,	AL
    37 0000002E FA                      	CLI 								;禁止CPU级别的中断
    38                                  
    39                                  ;为了让CPU能够访问1MB以上的内存空间，设定A20GATE
    40 0000002F E8B500                  	CALL waitkbdOUT
    41 00000032 B0D1                    	MOV	AL,	0xd1
    42 00000034 E664                    	OUT	0x64,	AL
    43 00000036 E8AE00                  	CALL waitkbdOUT
    44 00000039 B0DF                    	MOV	AL,	0xdf
    45 0000003B E660                    	OUT	0x60,	AL
    46 0000003D E8A700                  	CALL waitkbdOUT
    47                                  
    48                                  ;切换到保护模式
    49                                  ;[INSTRSET "i486p"]
    50 00000040 0F0116[2A01]            	LGDT	[GDTR0]										;设定临时GDT
    51 00000045 0F20C0                  	MOV	EAX,	CR0
    52 00000048 6625FFFFFF7F            	AND	EAX,	0x7fffffff						;	设bit31为0(为了禁止颁)
    53 0000004E 6683C801                	OR	EAX,	0x00000001						;	设bit0为1(为了切换到保护模式)
    54 00000052 0F22C0                  	MOV	CR0,	EAX
    55 00000055 EB00                    	JMP	pipelINeflush
    56                                  
    57                                  pipelINeflush:
    58 00000057 B80800                  	MOV	AX,	1*8											;	可读写的段 32bit
    59 0000005A 8ED8                    	MOV	DS,	AX
    60 0000005C 8EC0                    	MOV	ES,	AX
    61 0000005E 8EE0                    	MOV	FS,	AX
    62 00000060 8EE8                    	MOV	GS,	AX
    63 00000062 8ED0                    	MOV	SS,	AX
    64                                  
    65                                  
    66                                  ;	bootpack的转送
    67 00000064 66BE[30010000]          	MOV	ESI,	bootpack
    68 0000006A 66BF00002800            	MOV	EDI,	BOTPAK
    69 00000070 66B900000200            	MOV	ECX,	512*1024/4
    70 00000076 E87500                  	CALL	memcpy
    71                                  
    72                                  ;	磁盘数据最终转送到它本来的位置去
    73                                  ;	首先从启动扇区开始
    74 00000079 66BE007C0000            	MOV	ESI,	0x7c00										;	转送源
    75 0000007F 66BF00001000            	MOV	EDI,	DSKCAC										;	转送目的地
    76 00000085 66B980000000            	MOV	ECX,	512/4
    77 0000008B E86000                  	CALL	memcpy
    78                                  
    79                                  ;	所有剩下的
    80 0000008E 66BE00820000            	MOV	ESI,	DSKCAC0+512								;	转送源
    81 00000094 66BF00021000            	MOV	EDI,	DSKCAC+512								;	转送目的地
    82 0000009A 66B900000000            	MOV	ECX,	0
    83 000000A0 8A0EF00F                	MOV	CL,		BYTE	[CYLS]
    84 000000A4 6669C900120000          	IMUL	ECX,	512*18*2/4							;	从柱面数变为字节数/4
    85 000000AB 6681E980000000          	SUB	ECX,	512/4											;	减去	IPL
    86 000000B2 E83900                  	CALL	memcpy
    87                                  
    88                                  ;	必须由asmhead来完成的工作，至此全部完毕，以后就交给bootpack来完成
    89                                  
    90                                  ;	bootpack的启动
    91 000000B5 66BB00002800            	MOV	EBX,	BOTPAK
    92 000000BB 66678B4B10              	MOV	ECX,	[EBX+16]
    93 000000C0 6683C103                	ADD	ECX,	3								; ECX +=3
    94 000000C4 66C1E902                	SHR	ECX,	2								; ECX	/=2
    95 000000C8 7410                    	JZ	skip
    96 000000CA 66678B7314              	MOV	ESI,	[EBX+20]									;	转送源
    97 000000CF 6601DE                  	ADD	ESI,	EBX
    98 000000D2 66678B7B0C              	MOV	EDI,	[EBX+12]									;	转送目的地
    99 000000D7 E81400                  	CALL	memcpy
   100                                  
   101                                  skip:
   102 000000DA 66678B630C              	MOV	ESP,	[EBX+12]
   103 000000DF 66EA1B0000001000        	jmp	DWORD 2*8:0x0000001b
   104                                  
   105                                  waitkbdOUT
   105          ******************       warning: label alone on a line without a colon might be in error
   106 000000E7 E464                    	IN	AL,	0x64
   107 000000E9 2402                    	AND	AL,	0x02
   108 000000EB 75FA                    	JNZ	waitkbdOUT												;	AND 的结果不是0,就跳转到waitkbdOUT
   109 000000ED C3                      	RET
   110                                  
   111                                  memcpy:
   112 000000EE 66678B06                	MOV	EAX,	[ESI]
   113 000000F2 6683C604                	ADD	ESI,	4
   114 000000F6 66678907                	MOV	[EDI],	EAX
   115 000000FA 6683C704                	ADD	EDI,	4
   116 000000FE 6683E901                	sub	ECX,	1
   117 00000102 75EA                    	JNZ	memcpy														;	减法运算的结果如果不是0,就跳转到memcpy
   118 00000104 C3                      	RET
   119                                  	
   120 00000105 <res 0000000B>          	ALIGNB	16
   120          ******************       warning: uninitialized space declared in .text section: zeroing
   121                                  
   122                                  GDT0:
   123 00000110 <res 00000008>          	RESB	8																; NULL selector
   123          ******************       warning: uninitialized space declared in .text section: zeroing
   124 00000118 FFFF00000092CF00        	DW	0xffff,	0x0000,	0x9200,	0x00cf		;	可以读写的段(segment) 32bit
   125 00000120 FFFF0000289A4700        	DW	0xffff,	0x0000,	0x9a28,	0x0047		;	可以执行的段(segment) 32bit(bootpack 用)
   126                                  	
   127 00000128 0000                    	DW	0
   128                                  
   129                                  GDTR0:
   130 0000012A 1700                    	DW	8*3-1
   131 0000012C [10010000]              	DD	GDT0
   132                                  	ALIGNB	16
   133                                  
   134                                  bootpack:
